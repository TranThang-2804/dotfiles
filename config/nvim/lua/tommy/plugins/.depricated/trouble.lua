return {
  -- "folke/trouble.nvim",
  -- cmd = { "Trouble" },
  -- opts = { use_diagnostic_signs = true },
  -- keys = {
  --   {
  --     "<leader>xX",
  --     "<cmd>Trouble diagnostics toggle<cr>",
  --     desc = "Diagnostics workspace (Trouble)",
  --   },
  --   {
  --     "<leader>xx",
  --     "<cmd>Trouble diagnostics toggle filter.buf=0<cr>",
  --     desc = "Buffer Diagnostics (Trouble)",
  --   },
  --   {
  --     "<leader>xL",
  --     "<cmd>Trouble loclist toggle<cr>",
  --     desc = "Location List (Trouble)",
  --   },
  --   {
  --     "<leader>xQ",
  --     "<cmd>Trouble qflist toggle<cr>",
  --     desc = "Quickfix List (Trouble)",
  --   },
  --   {
  --     "<leader>kq",
  --     function()
  --       if require("trouble").is_open() then
  --         require("trouble").previous({ skip_groups = true, jump = true })
  --       else
  --         local ok, err = pcall(vim.cmd.cprev)
  --       end
  --     end,
  --     desc = "Previous trouble/quickfix item",
  --   },
  --   {
  --     "<leader>jq",
  --     function()
  --       if require("trouble").is_open() then
  --         require("trouble").next({ skip_groups = true, jump = true })
  --       else
  --         local ok, err = pcall(vim.cmd.cnext)
  --       end
  --     end,
  --     desc = "Next trouble/quickfix item",
  --   },
  -- },
}
